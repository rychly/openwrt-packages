# a destination number for administrative messages sent without using the filesystem
admin_to = 420123456789

# splits large text messages to (3) concatenated format
autosplit = 3

# access control for sending messages
#blacklist = /etc/smsd.black
#whitelist = /etc/smsd.white

# blocking of the modem for Y seconds after X errors while sending messages
blockafter = 5
blocktime = 600

# a program that checks if a message file is valid and move it into 'checked' directory (exit code 2)
#checkhandler = /usr/local/bin/sms-make-short

# timestamp format Y in the beginning (X=1) of filenames of incoming messages and format Z inside the files
date_filename = 1
date_filename_format = %F-%H-%M-%S
datetime_format = %F-%H-%M-%S

# the incoming Unicode text is decoded internally
decode_unicode_text = yes

# sleep so many seconds when it has nothing to do
delaytime = 15

# names of modems
devices = E220

# a program or script that will execute whenever a message was sent, received or failed
#eventhandler = /usr/local/bin/eventhandler-for-sms

# detect unexpected input contains "RING" and do not hangup by ATH but AT+CHUP
hangup_incoming_call = yes
voicecall_hangup_ath = no

# incoming messages using ISO or GSM alphabet are stored using UTF-8
incoming_utf8 = yes

# each incoming multipart message (text X and binary Y) is combined internally
internal_combine = yes
internal_combine_binary = yes

# Type Of Address of outgoing messages is international by default only if number matches to list
international_prefixes = 420

# log file (empty = syslog)
#logfile = /var/log/smsd.log
# logging charset conversions
#log_charconv = yes
# log level (5=send/receive, 7=debug)
#loglevel = 7
loglevel = 5
# splitted logs (cannot be used when syslog is used for logging)
#smart_logging = yes

# empty the first SIM card memory before sending SM
receive_before_send = yes

# include counters and signal quality into statistics (which should be enabled during compilation)
status_include_counters = yes
status_signal_quality = yes

# remove trailing whitespaces from outgoing messages
trim_text = yes

# process owner and files rights (octal umask values have to start with 0)
umask = 0133
user = root
group = network

# info and PID files (in OpenWRT set by cmd-line args)
#infofile = /var/run/smsd.working
#pidfile = /var/run/smsd.pid

# default messages validity period (255 = 255-192 = 63 weeks)
validity = 255

## directories
# for messages ready to send (checked by a 'checkhandler' program with exit code 2)
checked = /var/spool/sms/checked
# where to keep failed files
failed = /var/spool/sms/failed
# for incoming messages
incoming = /var/spool/sms/incoming
# for outgoing messages
outgoing = /var/spool/sms/outgoing
# for incomming phonecalls
#phonecalls = /var/spool/sms/phonecall
# for status report messages
#report = /var/spool/sms/report
# for concatenation storage
#saved = /var/spool/sms/concatenation
# for sent messages if needed
sent = /var/spool/sms/sent
# for message counter files, etc. (and statistic files if enabled during compilation)
#stats = /var/spool/sms/stats


[E220]

# incoming messages are checked by CMGD (2; which is supported by the modem)
check_memory_method = 2

# network registration is always (1) checked
check_network = 1

# the device name of the serial port to the modem (ttyUSB0&1 for commands, ttyUSB2 for commands and status messages such as RING on incomming calls)
device = /dev/ttyUSB2

# read incoming SM from this modem with high priority
incoming = high

## modem initialisation commands
# disable system commands that are sent to the modem before anything else is done
pre_init = no
# and enable user defined modem initialisation commands
# ATE0		echo off, required by smstools
# ATE1		echo on
# AT+CMEE=2	provide an error message (0) with the mistake number codes (1) and indications for detail (2)
# AT+CREG=1	AT+CREG? no location information (1), otherwise (2) smstools unable to detect successful registration
# AT^CURC=0	turn off periodic status messages (RSSI status, etc.)
# AT+CLIP=1 enable Calling Line Identification Presentation on RING status messages (needed for phonecalls=clip option)
# AT+CNMI=...	disable message routing mode, specifically the following
#  1 = the received text messages will be sent directly to the TE
#  1 = SMSs stored in the ME wil be returned
#  0 = Cell Broadcast will not be noticed
#  2 = new status reports stored in ME will be returned
#  1 = fixed value
# AT+CSCS="GSM"	select char-set of outgoing SMS messages is ASCII mode and of USSD messages (do not affect smstools as it uses only PDU mode)
# AT^SYSCFG=13,1,3FFFFFFF,2,4 set GSM only (13), GSM prefered (1), all bands (3FFFFFFF), without change of both roaming (1) and circuit/packet-switched network (4)
# AT+CGATT=0	detach from GPRS/Packet Domain network/service
# AT+COPS?	get active network Name and ID
# AT+COPS=1,2,"23002"	network operator is selected manually in the numeric format as (1,"EUROTEL - CZ","ET - CZ","23002",0)
init = ATE0;+CMEE=2;+CREG=1;^CURC=0;+CLIP=1;+COPS?
init2 = AT+CNMI=1,1,0,2,1;+CSCS="GSM";^SYSCFG=13,1,3FFFFFFF,2,4;+CGATT=0

# the first memory space number for received messages (some of Huawei start from 0)
memory_start = 0

# a phone number of the SIM
number = 420987654321

# missed phonecalls are reported with Calling line identification report (hanguped first)
phonecalls = clip

# skip the whole PIN handling procedure (PIN is disabled)
pin = ignore

# on read data from a modem, timeout will occur after X seconds if an acceptable answer is not received
read_timeout = 10

# program requests a status report SM from the SMSC for each sent message
report = no

# do not print details from device to the log at start
report_device_details = no

# ignore Bit Error Rate when signal quality is asked as this always provides "Bit Error Rate: not known or not detectable"
signal_quality_ber_ignore = yes


[E173s1]

# the speed of the serial communication in bits per second (19200 for older devices)
#baudrate = 19200
#baudrate = 9600

# incoming messages are checked by CMGD (2; which is supported by the modem)
check_memory_method = 2

# network registration is always (1) checked
check_network = 1

# the device name of the serial port to the modem
device = /dev/ttyUSB2

# read incoming SM from this modem with high priority
incoming = high

## modem initialisation commands
# disable system commands that are sent to the modem before anything else is done
pre_init = no
# and enable user defined modem initialisation commands
# ATE0		echo off, required by smstools
# ATE1		echo on
# AT+CMEE=2	provide an error message (0) with the mistake number codes (1) and indications for detail (2)
# AT+CREG=1	AT+CREG? no location information (1), otherwise (2) smstools unable to detect successful registration
# AT^CURC=0	turn off periodic status messages (RSSI status, etc.)
# AT+CGATT=0	detach from GPRS/Packet Domain network/service
# AT+CNMI=...	disable message routing mode, specifically the following
#  1 = the received text messages will be sent directly to the TE
#  1 = SMSs stored in the ME wil be returned
#  0 = Cell Broadcast will not be noticed
#  2 = new status reports stored in ME will be returned
#  1 = fixed value
# AT+COPS?	get active network Name and ID
# AT+COPS=1,2,"23002"	network operator is selected manually in the numeric format as (1,"EUROTEL - CZ","ET - CZ","23002",0)
init = ATE0;+CMEE=2;+CREG=1;^CURC=0;+CGATT=0;+CNMI=1,1,0,2,1;+COPS?

# the first memory space number for received messages (some of Huawei start from 0)
memory_start = 1

# to avoid error messages when sleep, first send AT and read the answer if it's available
needs_wakeup_at = yes

# a phone number of the SIM
number = 420987654321

# missed phonecalls are reported with Calling line identification report (hanguped first)
phonecalls = clip

# skip the whole PIN handling procedure (PIN is disabled)
pin = ignore

# on read data from a modem, timeout will occur after X seconds if an acceptable answer is not received
read_timeout = 10

# program requests a status report SM from the SMSC for each sent message
report = no

# do not print details from device to the log at start
report_device_details = no

# ignore Bit Error Rate when signal quality is asked as this always provides "Bit Error Rate: not known or not detectable"
signal_quality_ber_ignore = yes

